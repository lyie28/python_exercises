[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "weather-aggregator"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "laura-hai", email = "laura@hcompany.ai" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.optional-dependencies]
dev = [
  "pytest>=8.3.4",
  "pydantic==2.10.4",
  "pytest-asyncio==0.25.0"
]

[project.urls]
Documentation = "https://github.com/laura-hai/weather-aggregator#readme"
Issues = "https://github.com/laura-hai/weather-aggregator/issues"
Source = "https://github.com/laura-hai/weather-aggregator"

[tool.hatch.version]
path = "src/weather_aggregator/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/weather_aggregator tests}"

[tool.coverage.run]
source_pkgs = ["weather_aggregator", "tests"]
branch = true
parallel = true
omit = [
  "src/weather_aggregator/__about__.py",
]

[tool.coverage.paths]
weather_aggregator = ["src/weather_aggregator", "*/weather-aggregator/src/weather_aggregator"]
tests = ["tests", "*/weather-aggregator/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
select = ["F", "E", "W", "I", "N", "UP", "ANN", "B"]

[tool.pytest.ini_options]
addopts = "--cov=weather_aggregator --cov-report=xml --cov-report=html"
testpaths = ["tests"]
